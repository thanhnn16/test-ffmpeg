# basic-ass-creator.ps1
# Script PowerShell tạo phụ đề ASS đẹp mắt từ file JSON của Whisper với hiệu ứng highlight từng từ

# ------------ CẤU HỆNH CHUNG ------------
# Biến toàn cục dùng cho toàn bộ script
$script:ampersand = [char]38 # Ký tự '&'
$script:backslash = [char]92 # Ký tự '\'
$script:defaultColor = "FFFFFF" # Màu chữ mặc định (định dạng: bbggrr)
$script:highlightColor = "0CF4FF" # Màu highlight (định dạng: bbggrr)
$script:outlineColor = "000000" # Màu viền
$script:shadowColor = "000000" # Màu bóng đổ
$script:titleText = "Mèo 10 chân hút vape" # Văn bản tiêu đề
$script:titleColor1 = "00FFFF" # Màu gradient 1 cho title (định dạng: bbggrr)
$script:titleColor2 = "FF00FF" # Màu gradient 2 cho title (định dạng: bbggrr)
$script:titleDuration = 7.0 # Thời gian hiển thị title (giây)

# ------------ CÁC HÀM XỬ LÝ CƠ BẢN ------------
# Hàm thêm số 0 vào đầu
function PadZero {
    param (
        [int]$num,
        [int]$length = 2
    )
    
    return $num.ToString().PadLeft($length, '0')
}

# Hàm chuyển đổi số giây thành định dạng thời gian ASS (H:MM:SS.cs)
function FormatAssTime {
    param (
        [double]$seconds
    )
    
    $totalCentiseconds = [Math]::Floor($seconds * 100)
    $cs = $totalCentiseconds % 100
    $totalSeconds = [Math]::Floor($totalCentiseconds / 100)
    $s = $totalSeconds % 60
    $totalMinutes = [Math]::Floor($totalSeconds / 60)
    $m = $totalMinutes % 60
    $h = [Math]::Floor($totalMinutes / 60)
    
    return "${h}:$(PadZero $m):$(PadZero $s).$(PadZero $cs)"
}

# ------------ TẠO NỘI DUNG ASS ------------
# Hàm tạo header cho file ASS
function CreateAssHeader {
    $bs = $script:backslash
    $amp = $script:ampersand
    
    # Tạo từng phần riêng biệt
    $scriptInfo = @"
[Script Info]
; Script generated by basic-ass-creator.ps1
Title: Beautiful ASS Subtitle
ScriptType: v4.00+
Collisions: Normal
PlayResX: 1920
PlayResY: 1080
Timer: 100.0000
WrapStyle: 0
"@

    $stylesHeader = @"

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
"@

    # Tạo style riêng lẻ
    $defColorPrimary = "${amp}H00FFFFFF"
    $defColorSecondary = "${amp}H000000FF" 
    $defColorOutline = "${amp}H00000000"
    $defColorShadow = "${amp}H80000000"
    
    $defaultStyle = "Style: Default,Arial,54,$defColorPrimary,$defColorSecondary,$defColorOutline,$defColorShadow,-1,0,0,0,100,100,0,0,1,2.5,1.5,2,10,10,30,1"
    $titleStyle = "Style: Title,Arial Black,64,$defColorPrimary,$defColorSecondary,$defColorOutline,$defColorShadow,-1,0,0,0,100,100,0,0,1,3,2,8,10,10,10,1"
    
    $eventsHeader = @"

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
"@

    # Kết hợp tất cả
    $header = $scriptInfo + $stylesHeader + "`n" + $defaultStyle + "`n" + $titleStyle + $eventsHeader
    return $header
}

# Hàm tạo dòng tiêu đề
function CreateTitleLine {
    $bs = $script:backslash
    $amp = $script:ampersand
    
    # Tạo tag fade với thời gian fade in/out dài hơn
    $fadTag = "$bs" + "fad(800,800)"
    
    # Tạo tag hiệu ứng chuyển động
    $moveTag = "$bs" + "move(960,100,960,150,0,2000)"
    
    # Tạo tag hiệu ứng gradient màu
    $colorTag1 = "$bs" + "1c$amp" + "H$script:titleColor1"
    $colorTag2 = "$bs" + "2c$amp" + "H$script:titleColor2"
    
    # Tạo tag viền và glow
    $outlineTag = "$bs" + "3c$amp" + "H000000"
    $blurTag = "$bs" + "blur2"
    $borderTag = "$bs" + "bord2"
    $shadowTag = "$bs" + "shad3"
    
    # Tạo tag transform để tạo hiệu ứng chuyển động và nhấp nháy
    $t1 = "$bs" + "t(0,2000,$bs" + "fscx120$bs" + "fscy120)"
    $t2 = "$bs" + "t(2000,4000,$bs" + "fscx100$bs" + "fscy100)"
    $t3 = "$bs" + "t(4000,6000,$bs" + "fscx110$bs" + "fscy110)"
    
    # Tạo tag glow
    $glowTag = "$bs" + "4a$amp" + "H60"
    
    # Kết hợp các tag
    $allTags = "{$fadTag$moveTag$colorTag1$colorTag2$outlineTag$blurTag$borderTag$shadowTag$glowTag$t1$t2$t3}"
    
    # Tạo dòng dialogue hoàn chỉnh với thời gian hiển thị dài hơn
    $titleLine = "Dialogue: 0,0:00:00.00,0:00:0$script:titleDuration.00,Title,,0,0,0,,$allTags$script:titleText"
    
    # Tạo thêm một dòng phụ đề với hiệu ứng bóng mờ để tạo hiệu ứng glow
    $glowEffect = "{$bs" + "pos(960,150)$bs" + "blur5$bs" + "bord0$bs" + "shad0$bs" + "fscx110$bs" + "fscy110$bs" + "alpha&H80&$bs" + "c$amp" + "H$script:titleColor2$fadTag}"
    $titleGlowLine = "Dialogue: -1,0:00:00.50,0:00:0$($script:titleDuration - 0.5).00,Title,,0,0,0,,$glowEffect$script:titleText"
    
    return $titleLine + "`n" + $titleGlowLine
}

# Hàm tạo dòng dialogue với hiệu ứng highlight từng từ
function CreateHighlightDialogueLine2 {
    param (
        [double]$startTime,
        [double]$endTime,
        [PSCustomObject[]]$wordObjects
    )
    
    $bs = $script:backslash
    $amp = $script:ampersand
    
    # Định dạng thời gian bắt đầu và kết thúc
    $startTimeAss = FormatAssTime $startTime
    $endTimeAss = FormatAssTime $endTime
    
    # Tạo tag fade đẹp hơn với thời gian fade in/out ngắn hơn để tránh chồng lấn
    $fadeTag = "$bs" + "fad(150,150)"
    
    # Tạo các tag hiệu ứng cơ bản nâng cao
    $blurTag = "$bs" + "blur0.6"
    $borderTag = "$bs" + "bord1.8"
    $shadowTag = "$bs" + "shad1.2"
    $spacingTag = "$bs" + "fsp0.5"
    
    # Tạo tag hiệu ứng cơ bản
    $basicEffect = "{$fadeTag$blurTag$borderTag$shadowTag$spacingTag}"
    
    # Tạo tag màu mặc định và highlight với gradient
    $defaultColorTag = "$bs" + "c$amp" + "H$script:defaultColor"
    $highlightColorTag = "$bs" + "c$amp" + "H$script:highlightColor"
    $outlineTag = "$bs" + "3c$amp" + "H$script:outlineColor"
    $shadowColorTag = "$bs" + "4c$amp" + "H$script:shadowColor"
    
    # Xây dựng chuỗi phụ đề với hiệu ứng highlight
    $dialogueLines = @()
    
    # Tạo một dòng phụ đề với màu mặc định cho tất cả các từ (layer 0)
    $defaultText = "{$defaultColorTag$outlineTag$shadowColorTag}"
    foreach ($wordObj in $wordObjects) {
        $defaultText += "$($wordObj.word) "
    }
    $defaultText = $defaultText.TrimEnd()
    
    # Thêm dòng phụ đề mặc định (layer 0)
    $dialoguePrefix = "Dialogue: 0,$startTimeAss,$endTimeAss,Default,,0,0,0,," 
    $dialogueLines += $dialoguePrefix + $basicEffect + $defaultText
    
    # Tạo các dòng phụ đề highlight cho từng từ (layer 1)
    foreach ($wordObj in $wordObjects) {
        $wordStart = $wordObj.start
        $wordEnd = $wordObj.end
        
        # Chỉ tạo highlight nếu từ nằm trong khoảng thời gian của đoạn
        if (($wordStart -ge $startTime) -and ($wordEnd -le $endTime)) {
            # Định dạng thời gian bắt đầu và kết thúc cho từng từ
            $wordStartAss = FormatAssTime $wordStart
            $wordEndAss = FormatAssTime $wordEnd
            
            # Tính toán thời gian transition ngắn hơn để tránh nhảy
            $transitionTime = [Math]::Min(($wordEnd - $wordStart) * 0.2, 0.1) * 1000 # Giảm xuống 100ms hoặc 20% thời gian từ
            
            # Tạo hiệu ứng transform cho từ được highlight với thời gian ngắn hơn
            $transformTag = "$bs" + "t(0,$transitionTime,$bs" + "fscx102$bs" + "fscy102$bs" + "blur0.8)"
            $transformTag2 = "$bs" + "t($transitionTime," + ($transitionTime * 2) + ",$bs" + "fscx100$bs" + "fscy100$bs" + "blur0.4)"
            
            # Tạo hiệu ứng glow cho từ được highlight với độ mờ thấp hơn
            $glowTag = "$bs" + "4a$amp" + "H30"
            
            # Tạo văn bản với từ được highlight
            $highlightText = "{$defaultColorTag$outlineTag$shadowColorTag}"
            
            for ($i = 0; $i -lt $wordObjects.Length; $i++) {
                $w = $wordObjects[$i]
                
                if ($w -eq $wordObj) {
                    # Đây là từ cần highlight với hiệu ứng đẹp hơn
                    $highlightText += "{$highlightColorTag$transformTag$transformTag2$glowTag}$($w.word){$defaultColorTag}"
                } else {
                    # Đây là từ bình thường
                    $highlightText += "$($w.word)"
                }
                
                # Thêm khoảng trắng sau mỗi từ (trừ từ cuối cùng)
                if ($i -lt $wordObjects.Length - 1) {
                    $highlightText += " "
                }
            }
            
            # Thêm dòng highlight cho từ này (layer 1)
            $highlightPrefix = "Dialogue: 1,$wordStartAss,$wordEndAss,Default,,0,0,0,," 
            $highlightEffect = "{$blurTag$borderTag$shadowTag$spacingTag}"
            $dialogueLines += $highlightPrefix + $highlightEffect + $highlightText
            
            # Thêm hiệu ứng glow nhẹ dưới từ được highlight (layer -1)
            $glowPrefix = "Dialogue: -1,$wordStartAss,$wordEndAss,Default,,0,0,0,," 
            $glowText = ""
            
            for ($i = 0; $i -lt $wordObjects.Length; $i++) {
                $w = $wordObjects[$i]
                
                if ($w -eq $wordObj) {
                    # Tạo hiệu ứng glow cho từ được highlight với độ mờ thấp hơn
                    $glowEffect = "{$bs" + "pos(" + (960) + "," + (540 + 2) + ")$bs" + "blur2$bs" + "bord0$bs" + "shad0$bs" + "fscx101$bs" + "fscy101$bs" + "alpha&H60&$bs" + "c$amp" + "H$script:highlightColor}"
                    $glowText += "$glowEffect$($w.word) "
                } else {
                    $glowText += " " * ($w.word.Length + 1)
                }
            }
            
            if ($glowText.Trim() -ne "") {
                $dialogueLines += $glowPrefix + $glowText.TrimEnd()
            }
        }
    }
    
    return $dialogueLines -join "`n"
}

# Hàm chuyển đổi JSON thành ASS
function ConvertJsonToAss {
    param (
        [string]$whisperJsonPath,
        [string]$outputJsonPath,
        [string]$assFilePath = "subtitle.ass"
    )
    
    # Kiểm tra file JSON có tồn tại không
    if (-not (Test-Path $whisperJsonPath)) {
        Write-Error "File $whisperJsonPath không tồn tại."
        return $false
    }
    
    if (-not (Test-Path $outputJsonPath)) {
        Write-Error "File $outputJsonPath không tồn tại."
        return $false
    }
    
    try {
        # Đọc dữ liệu từ file JSON
        $whisperData = Get-Content -Path $whisperJsonPath -Raw -Encoding UTF8 | ConvertFrom-Json
        $outputData = Get-Content -Path $outputJsonPath -Raw -Encoding UTF8 | ConvertFrom-Json
        
        # Tạo header và tiêu đề cho file ASS
        $assHeader = CreateAssHeader
        $titleLine = CreateTitleLine
        $assContent = $assHeader + "`n" + $titleLine
        
        # Lấy dữ liệu từ whisper
        $transcription = $whisperData[0]
        $allWords = $transcription.words
        
        # Lấy dữ liệu từ output.json
        $groups = $outputData[0].groups
        
        # Xử lý từng nhóm phụ đề
        foreach ($group in $groups) {
            $startTime = $group.start
            $endTime = $group.end
            $startIndex = $group.startIndex
            $endIndex = $group.endIndex
            
            # Lấy các từ trong nhóm này từ whisper data
            $groupWords = $allWords[$startIndex..$endIndex]
            
            # Tạo hiệu ứng highlight cho nhóm từ này (sử dụng phương pháp thay thế)
            $dialogueLine = CreateHighlightDialogueLine2 $startTime $endTime $groupWords
            $assContent += "`n" + $dialogueLine
        }
        
        # Ghi nội dung ASS vào file
        $assContent | Out-File -FilePath $assFilePath -Encoding UTF8
        Write-Host "Đã tạo thành công file phụ đề ASS: $assFilePath"
        
        return $true
    }
    catch {
        Write-Error "Lỗi khi chuyển đổi file: $_"
        return $false
    }
}

# ------------ THỰC THI CHƯƠNG TRÌNH ------------
# Xác định đường dẫn file đầu vào và đầu ra
$whisperJsonFile = if ($args.Count -gt 0) { $args[0] } else { "whisper-transcription.json" }
$outputJsonFile = if ($args.Count -gt 1) { $args[1] } else { "output.json" }
$assFile = if ($args.Count -gt 2) { $args[2] } else { "subtitle.ass" }

# Chạy chương trình chuyển đổi
Write-Host "Bắt đầu chuyển đổi từ $whisperJsonFile và $outputJsonFile sang $assFile..."
$result = ConvertJsonToAss -whisperJsonPath $whisperJsonFile -outputJsonPath $outputJsonFile -assFilePath $assFile

# Kiểm tra kết quả
if (-not $result) {
    Write-Host "Chuyển đổi không thành công." -ForegroundColor Red
    exit 1
} else {
    Write-Host "Chuyển đổi thành công! File ASS đã được tạo với hiệu ứng highlight từng từ." -ForegroundColor Green
}
